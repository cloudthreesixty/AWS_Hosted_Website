{
    "AWSTemplateFormatVersion": "2010-09-09", 
    "Metadata": {
        "License": "Apache-2.0"
    }, 
    "Description": "AWS CloudFormation Sample Template S3_Website_With_CloudFront_Distribution: Sample template showing how to create a website with a custom DNS name, hosted on Amazon S3 and served via Amazone CloudFront. It assumes you already have a Hosted Zone registered with Amazon Route 53. **WARNING** This template creates an Amazon Route 53 DNS record, an S3 bucket and a CloudFront distribution. You will be billed for the AWS resources used if you create a stack from this template.", 
    "Parameters": {
        "HostedZone": {
            "Type": "String", 
            "Description": "The DNS name of an existing Amazon Route 53 hosted zone", 
            "AllowedPattern": "(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)", 
            "ConstraintDescription": "must be a valid DNS zone name."
        },
        "CertificateArn": {
            "Type": "String", 
            "Description": "The Arn of an existing ACM certificate", 
            "AllowedPattern": "arn[a-z0-9-:\/]*", 
            "ConstraintDescription": "must be a valid Certificate ARN."
        },
        "DeployAccount": {
            "Type": "String",
            "AllowedValues": ["true", "false"],
            "Default": "true",
            "Description": "IAM user with permissions to upload files to S3 bucket. Useful if you're using CI to build websites"
        },
        "DeployIPrestriction": {
            "Description": "Comma-delimited list of allowed IP addresss for DeployAccess",
            "Type": "CommaDelimitedList",
            "Default": "82.24.51.0/24"
        }
    }, 
    "Mappings": {
        "Region2S3WebsiteSuffix": {
            "us-east-1": {
                "Suffix": ".s3-website-us-east-1.amazonaws.com"
            }, 
            "us-west-1": {
                "Suffix": ".s3-website-us-west-1.amazonaws.com"
            }, 
            "us-west-2": {
                "Suffix": ".s3-website-us-west-2.amazonaws.com"
            }, 
            "eu-west-1": {
                "Suffix": ".s3-website-eu-west-1.amazonaws.com"
            }, 
            "eu-west-2": {
                "Suffix": ".s3-website-eu-west-2.amazonaws.com"
            }, 
            "ap-northeast-1": {
                "Suffix": ".s3-website-ap-northeast-1.amazonaws.com"
            }, 
            "ap-northeast-2": {
                "Suffix": ".s3-website-ap-northeast-2.amazonaws.com"
            }, 
            "ap-southeast-1": {
                "Suffix": ".s3-website-ap-southeast-1.amazonaws.com"
            }, 
            "ap-southeast-2": {
                "Suffix": ".s3-website-ap-southeast-2.amazonaws.com"
            }, 
            "ap-south-1": {
                "Suffix": ".s3-website-ap-south-1.amazonaws.com"
            }, 
            "us-east-2": {
                "Suffix": ".s3-website-us-east-2.amazonaws.com"
            }, 
            "sa-east-1": {
                "Suffix": ".s3-website-sa-east-1.amazonaws.com"
            }, 
            "cn-north-1": {
                "Suffix": ".s3-website.cn-north-1.amazonaws.com.cn"
            }, 
            "eu-central-1": {
                "Suffix": ".s3-website.eu-central-1.amazonaws.com"
            }
        }
    }, 

    "Conditions": {
        "CreateDeployAccount": {
            "Fn::Equals": [{"Ref": "DeployAccount"}, "true"]
        }
    },
    "Resources": {

        "S3BucketForLogs": {
            "Type": "AWS::S3::Bucket", 
            "Properties": {
                "AccessControl": "LogDeliveryWrite"
            }
        },

        "S3BucketForWebsiteContent": {
            "Type": "AWS::S3::Bucket", 
            "Properties": {
                "AccessControl": "PublicRead", 
                "LoggingConfiguration": {
                    "DestinationBucketName" : { "Ref": "S3BucketForLogs" },
                    "LogFilePrefix" : "s3-website-logs/"
                },
                "WebsiteConfiguration": {
                    "IndexDocument": "index.html",
                    "ErrorDocument": "error.html"
                }
            }
        }, 

        "WebsiteCDN": {
            "Type": "AWS::CloudFront::Distribution", 
            "Properties": {
                "DistributionConfig": {
                    "Comment": "CDN for S3-backed website", 
                    "Aliases": [
                        {
                            "Ref": "HostedZone"
                        }
                    ], 
                    "Enabled": "true", 
                    "DefaultCacheBehavior": {
                        "ForwardedValues": {
                            "QueryString": "true"
                        }, 
                        "TargetOriginId": { "Ref": "HostedZone" }, 
                        "ViewerProtocolPolicy": "redirect-to-https"
                    }, 
                    "DefaultRootObject": "index.html", 
                    "Origins": [
                        {
                            "CustomOriginConfig": {
                                "HTTPPort": "80", 
                                "HTTPSPort": "443", 
                                "OriginProtocolPolicy": "http-only"
                            }, 
                            "DomainName": {
                                "Fn::Join": ["", [{"Ref":"S3BucketForWebsiteContent"}, ".s3-website-", {"Ref": "AWS::Region"}, ".amazonaws.com"]]
                            },
                            "Id":  { "Ref": "HostedZone" }
                        }
                    ],
                    "PriceClass": "PriceClass_100",
                    "ViewerCertificate" : {
                        "AcmCertificateArn": {"Ref":"CertificateArn"},
                        "SslSupportMethod": "sni-only"
                    },
                    "Logging": {
                        "IncludeCookies": "true",
                        "Bucket": {
                            "Fn::Join": ["", [{"Ref":"S3BucketForLogs"}, ".s3.amazonaws.com"]]
                        },
                        "Prefix": "cloudfront-website-logs"
                    }
                }
            }
        }, 
        "WebsiteDNSName": {
            "Type": "AWS::Route53::RecordSet", 
            "Properties": {
                "HostedZoneName": {
                    "Fn::Join": [
                        "", 
                        [
                            {
                                "Ref": "HostedZone"
                            }, 
                            "."
                        ]
                    ]
                }, 
                "Comment": "ALIAS to CloudFront distribution", 
                "Name": {
                    "Ref": "HostedZone"
                }, 
                "Type": "A", 
                "AliasTarget" : {
                    "HostedZoneId" : "Z2FDTNDATAQYW2",
                    "DNSName" : {
                                    "Fn::GetAtt": [
                                        "WebsiteCDN", 
                                        "DomainName"
                                    ]
                                }
                }
            }
        },

        "DeployUser": {
          "Type": "AWS::IAM::User",
          "Condition": "CreateDeployAccount",
          "Properties": {
            "Path": "/deploy/",
            "Policies": [{
              "PolicyName": {
                "Fn::Join": ["", ["APP-ACCESS-TO-S3-RW-", {"Ref":"S3BucketForWebsiteContent"}]]
              },
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [{
                  "Action": ["s3:DeleteObject", "s3:GetObject", "s3:PutObject", "s3:PutObjectAcl"],
                  "Effect": "Allow",
                  "Resource": [
                        { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "S3BucketForWebsiteContent" }, "/*" ]]},
                        { "Fn::Join": ["", [ { "Fn::GetAtt": [ "S3BucketForWebsiteContent",  "Arn" ] }, "/*" ]]},
                        { "Fn::Join": ["", [ { "Fn::GetAtt": [ "S3BucketForWebsiteContent",  "Arn" ] } ]]}
                    ]
                }, {
                  "Action": ["s3:ListBucket"],
                  "Effect": "Allow",
                  "Resource": { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "S3BucketForWebsiteContent" }]]}
                }, {
                  "Action": ["s3:ListAllMyBuckets"],
                  "Effect": "Allow",
                  "Resource": "*"
                }, {
                  "Action": ["cloudfront:CreateInvalidation", "cloudfront:ListDistributions", "cloudfront:GetDistribution", "cloudfront:UpdateDistribution"],
                  "Effect": "Allow",
                  "Resource": "*"
                }, {
                  "Effect": "Deny",
                  "Action": "*",
                  "Resource": "*",
                  "Condition": {"NotIpAddress": {"aws:SourceIp": { "Ref": "DeployIPrestriction" }}}
                }]
              }
            }]
          }
        },
        "DeployAccessKeys": {
          "Type": "AWS::IAM::AccessKey",
          "Condition": "CreateDeployAccount",
          "Properties": {
            "UserName": {
              "Ref": "DeployUser"
            }
          }
        }
    }, 
    "Outputs": {
    "CloudfrontURL": {
      "Value": {
        "Fn::GetAtt": [ "WebsiteCDN", "DomainName" ]
      },
      "Description": "URL for Cloudfront distribution"
    },
    "S3BucketForWebsiteContent": {
      "Value": {
        "Ref": "S3BucketForWebsiteContent"
      },
      "Description": "S3 bucket where website content is stored"
    },
    "DeployAccessId": {
      "Value": {
        "Ref": "DeployAccessKeys"
      },
      "Condition": "CreateDeployAccount",
      "Description": "AWS Access ID"
    },
    "DeploySecretKey": {
      "Value": {
        "Fn::GetAtt": ["DeployAccessKeys", "SecretAccessKey"]
      },
      "Condition": "CreateDeployAccount",
      "Description": "AWS Secret Key"
    }
    }
}